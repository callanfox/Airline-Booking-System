/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uflybookingsystem;

import javax.swing.JFileChooser;
import java.io.File;
import javax.swing.JOptionPane;
import java.awt.Font;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Callan
 */
public class ImportLocationsAndFlightsForm extends javax.swing.JFrame {
    private final JFileChooser fileChooser;
    private final StringBuffer filePath;
    private final String selectMsg = "Press 'Browse' to select file   ->";
    private final Font italicFont;
    private final Font plainFont;
    private File selectedFile;
    private int result;

    /**
     * Creates new form ImportLocationsAndFlightsForm
     */
    public ImportLocationsAndFlightsForm() {
        setContentPane(new JLabel(new ImageIcon(getClass().getResource("/background_ImportFiles.jpg"))));
        initComponents();
        fileChooser = new JFileChooser();
        filePath = new StringBuffer();
        italicFont = new Font(txtLocationsFile.getFont().getName(), Font.ITALIC, txtLocationsFile.getFont().getSize());
        plainFont = new Font(txtLocationsFile.getFont().getName(), Font.PLAIN, txtLocationsFile.getFont().getSize());
    }
    
    // function to process both browse button actions.
    private void processBrowseActions(javax.swing.JTextField field) {
        selectedFile = null;
        result =  fileChooser.showOpenDialog(this);
        
        // If user has selected a file from the file chooser dialog.
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            filePath.append(selectedFile.toString());
            
            // Check to see if file selected is of type .txt. If not, the file will not be imported,
            // intro message in field reset and pop window will indicate invalid file
            // selection.
            if(!(filePath.substring(filePath.length() - 3).equals("txt"))) {
                field.setFont(italicFont);
                field.setText(selectMsg);
                JOptionPane.showMessageDialog(this, "Please select a valid file of type .txt", 
                        "Invalid file type", JOptionPane.ERROR_MESSAGE);
                field.setFont(italicFont);
                field.setText(selectMsg);
                selectedFile = null;
            }
            // Valid file selection.
            else {
                field.setFont(plainFont);
                field.setText(selectedFile.toString());
            }
        }
    }
    
    // function to process import location button action
    private void processImportLocations(javax.swing.JTextField field) throws IOException {
        // Check to see user has selected a file.
        if (field.getText().equals(selectMsg)) {
            JOptionPane.showMessageDialog(this, "Please select a file using the 'Browse' button.", "Select a File", JOptionPane.ERROR_MESSAGE);
        }
        // Everything checks out. File imported and form closed.
        else {
            LocationImporter locationImporter = new LocationImporter(selectedFile.toString());
            locationImporter.run();
            ImportFeedBackForm form = new ImportFeedBackForm(locationImporter.getResults(), selectedFile);
            this.dispose();
            form.setVisible(true);
        }
    }
    
    // Function to process import location button action.
    private void processImportFlights(javax.swing.JTextField field) throws IOException {
        // Check to see user has selected a file.
        if (field.getText().equals(selectMsg)) {
            JOptionPane.showMessageDialog(this, "Please select a file using the 'Browse' button.", "Select a File", JOptionPane.ERROR_MESSAGE);
        }
        // Everything checks out. File imported and form closed.
        else {
            FlightImporter flightImporter = new FlightImporter(selectedFile.toString());
            flightImporter.run();
            this.dispose();
            ImportFeedBackForm form = new ImportFeedBackForm(flightImporter.getResults(), selectedFile);
            form.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSelectLocationsFile = new javax.swing.JLabel();
        lblSelectFlightsFile = new javax.swing.JLabel();
        txtLocationsFile = new javax.swing.JTextField();
        btnLocationsBrowse = new javax.swing.JButton();
        btnImportLocations = new javax.swing.JButton();
        txtFlightsFile = new javax.swing.JTextField();
        btnFlightsBrowse = new javax.swing.JButton();
        btnImportFlights = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblSelectLocationsFile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSelectLocationsFile.setText("Select Locations File:");

        lblSelectFlightsFile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSelectFlightsFile.setText("Select Flights File:");

        txtLocationsFile.setEditable(false);
        txtLocationsFile.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        txtLocationsFile.setForeground(new java.awt.Color(102, 102, 102));
        txtLocationsFile.setText("Press 'Browse' to select file   ->");
        txtLocationsFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocationsFileActionPerformed(evt);
            }
        });

        btnLocationsBrowse.setBackground(new java.awt.Color(255, 102, 0));
        btnLocationsBrowse.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLocationsBrowse.setForeground(new java.awt.Color(255, 255, 255));
        btnLocationsBrowse.setMnemonic('a');
        btnLocationsBrowse.setText("Browse");
        btnLocationsBrowse.setToolTipText("");
        btnLocationsBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocationsBrowseActionPerformed(evt);
            }
        });

        btnImportLocations.setBackground(new java.awt.Color(255, 102, 0));
        btnImportLocations.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnImportLocations.setForeground(new java.awt.Color(255, 255, 255));
        btnImportLocations.setMnemonic('a');
        btnImportLocations.setText("Import Locations");
        btnImportLocations.setToolTipText("");
        btnImportLocations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportLocationsActionPerformed(evt);
            }
        });

        txtFlightsFile.setEditable(false);
        txtFlightsFile.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        txtFlightsFile.setForeground(new java.awt.Color(102, 102, 102));
        txtFlightsFile.setText("Press 'Browse' to select file   ->");

        btnFlightsBrowse.setBackground(new java.awt.Color(255, 102, 0));
        btnFlightsBrowse.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnFlightsBrowse.setForeground(new java.awt.Color(255, 255, 255));
        btnFlightsBrowse.setMnemonic('a');
        btnFlightsBrowse.setText("Browse");
        btnFlightsBrowse.setToolTipText("");
        btnFlightsBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFlightsBrowseActionPerformed(evt);
            }
        });

        btnImportFlights.setBackground(new java.awt.Color(255, 102, 0));
        btnImportFlights.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnImportFlights.setForeground(new java.awt.Color(255, 255, 255));
        btnImportFlights.setMnemonic('a');
        btnImportFlights.setText("Import Files");
        btnImportFlights.setToolTipText("");
        btnImportFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportFlightsActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(102, 102, 102));
        btnClose.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClose.setForeground(new java.awt.Color(255, 255, 255));
        btnClose.setMnemonic('c');
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtFlightsFile, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)
                            .addComponent(btnFlightsBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblSelectFlightsFile)
                        .addComponent(lblSelectLocationsFile)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtLocationsFile, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)
                            .addComponent(btnLocationsBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnImportFlights, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(btnImportLocations, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(lblSelectLocationsFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLocationsBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtLocationsFile))
                .addGap(35, 35, 35)
                .addComponent(btnImportLocations)
                .addGap(81, 81, 81)
                .addComponent(lblSelectFlightsFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnFlightsBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFlightsFile, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btnImportFlights, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(43, 43, 43)
                .addComponent(btnClose)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLocationsBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocationsBrowseActionPerformed
        processBrowseActions(txtLocationsFile);
    }//GEN-LAST:event_btnLocationsBrowseActionPerformed

    private void btnImportLocationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportLocationsActionPerformed
      try {
            processImportLocations(txtLocationsFile);
        } 
        catch (IOException ex) {
            Logger.getLogger(ImportLocationsAndFlightsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImportLocationsActionPerformed

    private void btnFlightsBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFlightsBrowseActionPerformed
        processBrowseActions(txtFlightsFile);
    }//GEN-LAST:event_btnFlightsBrowseActionPerformed

    private void btnImportFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportFlightsActionPerformed
        try {
            processImportFlights(txtFlightsFile);
        } catch (IOException ex) {
            Logger.getLogger(ImportLocationsAndFlightsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImportFlightsActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
        MainForm form = new MainForm();
        form.setVisible(true);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void txtLocationsFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocationsFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLocationsFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportLocationsAndFlightsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportLocationsAndFlightsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportLocationsAndFlightsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportLocationsAndFlightsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImportLocationsAndFlightsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnFlightsBrowse;
    private javax.swing.JButton btnImportFlights;
    private javax.swing.JButton btnImportLocations;
    private javax.swing.JButton btnLocationsBrowse;
    private javax.swing.JLabel lblSelectFlightsFile;
    private javax.swing.JLabel lblSelectLocationsFile;
    private javax.swing.JTextField txtFlightsFile;
    private javax.swing.JTextField txtLocationsFile;
    // End of variables declaration//GEN-END:variables
}
